# pyproject.toml
[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "geosales-intelligence-platform"
version = "1.0.0"
description = "AI-powered geospatial sales intelligence and route optimization platform"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
keywords = ["geospatial", "sales", "analytics", "AI", "machine-learning"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
requires-python = ">=3.9"
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
    "psycopg2-binary>=2.9.7",
    "redis>=5.0.0",
    "celery>=5.3.0",
    "kafka-python>=2.0.2",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "scikit-learn>=1.3.0",
    "xgboost>=2.0.0",
    "lightgbm>=4.0.0",
    "tensorflow>=2.13.0",
    "torch>=2.0.0",
    "geopandas>=0.14.0",
    "folium>=0.15.0",
    "plotly>=5.17.0",
    "streamlit>=1.28.0",
    "dash>=2.14.0",
    "prophet>=1.1.4",
    "optuna>=3.4.0",
    "mlflow>=2.7.0",
    "shap>=0.43.0",
    "h3>=3.7.0",
    "osmnx>=1.6.0",
    "networkx>=3.2.0",
    "requests>=2.31.0",
    "pydantic>=2.4.0",
    "pydantic-settings>=2.0.0",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.6",
    "aiofiles>=23.2.1",
    "httpx>=0.25.0",
    "websockets>=12.0",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.9.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.6.0",
    "pre-commit>=3.5.0"
]

[project.optional-dependencies]
dev = [
    "jupyter>=1.0.0",
    "notebook>=7.0.0",
    "ipywidgets>=8.1.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "memory-profiler>=0.61.0",
    "line-profiler>=4.1.0"
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "mkdocstrings[python]>=0.23.0"
]
deployment = [
    "gunicorn>=21.2.0",
    "docker>=6.1.0",
    "kubernetes>=28.1.0"
]

[tool.setuptools.packages.find]
where = ["backend", "ml_engine", "stream_processing"]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.9"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true


